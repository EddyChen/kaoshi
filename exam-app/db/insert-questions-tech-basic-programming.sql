-- Generated by tools/parse_basic_programming_to_sql.py
-- Category: 科技/基础编程
-- Source: exam-app/data
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '为Test类的一个无形式参数无返回值的方法method书写方法头，使得使用类名Test作为前缀就可以调用它，该方法头的形式为( )', '{"A": "static void method（）", "B": "public void method", "C": "protected void method（）", "D": "abstract void method（）"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '类声明中，声明一个类不能再被继承的关键字是（）', '{"A": "public", "B": "abstract", "C": "final", "D": "static"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '队列(Queue)是先进先出的。（  ）', '{"A": "正确", "B": "错误"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列哪个语句语法正确？（ ）', '{"A": "byte y = 11; byte x = y +y;", "B": "String x = new Object();", "C": "Object x = new String(“Hellow”);", "D": "int a [11] = new int [11];"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '从 E－R 模型向关系模型转换时，一个 M：N 联系转换为关系模式时，该关系模式的主码是（ ）。', '{"A": "M 端实体的主码", "B": "N 端实体的主码", "C": "M 端实体的主码与 N 端实体的主码组合", "D": "重新选取其他属性"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Java 中，下面代码会出现编译错误的是（）', '{"A": "int[] arr = new int[]{1, 2, 3};", "B": "int[] arr = {1, 2, 3};", "C": "int arr[] = new int[3];", "D": "int arr[3] = {1, 2, 3};"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '以下多线程对int型变量x的操作,哪个不需要进行同步()', '{"A": "++x", "B": "x=y", "C": "x++", "D": "x=1"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '小明因为疫情需要在家办公，期间需要将自己计算机本地的文件夹（命名为 nowcoder）所有文件拷贝到实验室的远程服务器上（用户名为 root，ip 为 192.168.7.2）的 /file/ 目录下，可以用下面哪个命令实现（）', '{"A": "scp -r /nowcoder/ root@192.168.7.2:/file/", "B": "scp -r root@192.168.7.2:/file/ /nowcoder/", "C": "cp -r /nowcoder/ root@192.168.7.2:/file/", "D": "cp -r root@192.168.7.2:/file/ /nowcoder/"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在数据库的表定义中，限制成绩属性列的取值在0到100的范围内，属于数据的（ ）约束。', '{"A": "实体完整性", "B": "参照完整性", "C": "用户自定义", "D": "用户操作"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '以下那种操作是专门用于完成对数据库数据的查询的？', '{"A": "DCL", "B": "DDL", "C": "DML", "D": "DQL"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '网络管理员编写了shell程序prog1.sh,测试时程序死循环无法结束,可以通过下列方式结束程序（      ）', '{"A": "ctrl+C", "B": "esc", "C": "Alt F2 kill 进程ID", "D": "exit"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Mysql中表student_info(id,name,birth,sex)，字段类型都是varchar，插入如下记录：(''1014'' , ''张三'' , ''2002-01-06'' , ''男''); SQL错误的是（）？', '{"A": "insert into student_info values(''1014'' , ''张三'' , ''2002-01-06'' , ''男'');", "B": "insert into table student_info values(''1014'' , ''张三'' , ''2002-01-06'' , ''男'');", "C": "insert into student_info(id,name,birth,sex) values(''1014'' , ''张三'' , ''2002-01-06'' , ''男'');", "D": "insert into student_info(id,name,sex,birth) values(''1014'' , ''张三'' , ''男'',''2002-01-06'' );"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '关系完备的系统是指（）。', '{"A": "仅支持关系数据结构，不支持集合级的操作", "B": "仅支持关系数据结构和三种关系操作", "C": "支持关系数据结构和所有关系代数操作", "D": "支持关系模型的所有特征"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在E-R图中，实体用（ ）符号表示。', '{"A": "椭圆", "B": "矩形", "C": "菱形", "D": "三角形"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列选项中关于数据库事务的特性描述正确的是（）', '{"A": "事务允许继续分割", "B": "多个事务在执行事务前后对同一个数据读取的结果是不同的", "C": "一个事务对数据库中数据的改变是暂时的", "D": "并发访问数据库时，各并发事务之间数据库是独立的"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在sql数据库中，哪个语句能校验整数列 i 的值不小于 1 不大于 10 ？', '{"A": "i BETWEEN 1 AND 10", "B": "i BETWEEN 0 AND 11", "C": "i IN INTERVAL(0,11)", "D": "i IN INTERVAL(1,10)"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '一个Java源程序文件中定义几个类和接口，则编译该文件后生成几个以.class为后缀的字节码文件。', '{"A": "正确", "B": "错误"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '已知某期刊信息库中有作家信息表author（作者编号aid，作者姓名aname，作者笔名ausername，作者邮箱aemail，备注remarks），稿件表manuscript（稿件编号mid，标题mtitle，作者编号aid，交稿时间mtime）现需要设置外键作者编号，下列语句正确的是（）', '{"A": "ALTER TABLE manuscript\nADD CONSTRAINT FK_aid\nFOREIGN KEY (aid) REFERENCES author (aid)", "B": "ALTER TABLE manuscript\nADD CONSTRAINT FK_aid\nFOREIGN KEY (manuscript.aid) REFERENCES author (aid)", "C": "ALTER TABLE manuscript\nADD FOREIGN KEY (manuscript.aid)\nREFERENCES author (aid)", "D": "ALTER TABLE manuscript\nADD FOREIGN KEY (aid)\nREFERENCES author (aid)"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '视图建立后，在数据字典中存放的是（）。', '{"A": "查询语句", "B": "视图的内容", "C": "视图的定义", "D": "产生视图的表的定义"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在查询优化策略中，首先应该让投影操作尽可能早的做，然后再尽可能早的进行选择运算。（         ）', '{"A": "正确", "B": "错误"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面关于 Kotlin 的说法错误的是（）', '{"A": "Kotlin 中的 println() 函数调用了 System.out.println() 函数", "B": "Kotlin 中声明变量，可以使用 var 或 val 关键字", "C": "Kotlin 中声明变量必须指定变量的类型", "D": "Kotlin 中，val 变量赋值后，无法更改使用 val 关键字声明的变量"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面代码的输出是什么？ <pre><code>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
public

class

Base
{
    
private

String baseName =
"base"
;
    
public

Base()
    
{
        
callName();
    
}

public

void

callName()
    
{
        
System. out. println(baseName);
    
}

static

class

Sub
extends

Base
    
{
        
private

String baseName =
"sub"
;
        
public

void

callName()
        
{
            
System. out. println (baseName) ;
        
}
    
}
    
public

static

void

main(String[] args)
    
{
        
Base b =
new

Sub();
    
}
}</code></pre>', '{"A": "null", "B": "sub", "C": "base"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下图给定的关系R，它满足(   )。', '{"A": "1NF", "B": "2NF", "C": "3NF", "D": "BCNF"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '以下线程安全的有？', '{"A": "ArrayList", "B": "Vector", "C": "HashMap", "D": "HashTable"}', 'BD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '下面关于Java 中 yield 和 sleep 方法说法错误的是（）', '{"A": "yeild 方法调用后当前线程一定会让出 CPU 时间，而导致线程上下文切换", "B": "sleep 方法会导致当前线程暂停指定的时间，不会导致 CPU 时间片的消耗", "C": "yield 方法会导致当前线程暂停指定的时间，同时也会导致 CPU 时间片的消耗", "D": "yield 方法执行后，会使 running 状态的线程变为 waiting 状态"}', 'ACD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '以下不同的数据库类型中，哪些不属于关系数据库范畴', '{"A": "MongoDB", "B": "PostgreSQL", "C": "Redis", "D": "HBase"}', 'ACD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '类之间存在以下几种常见的关系：', '{"A": "“USES-A”关系", "B": "“HAS-A”关系", "C": "“IS-A”关系", "D": "“INHERIT-A”关系"}', 'ABC', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '在MySQL中，关于HASH索引，下列描述正确的是（ ）', '{"A": "只用于使用=或者 &lt; = &gt;操作符的等式比较", "B": "优化器不能使用HASH索引来加速Order By操作", "C": "如果将一个MyISAM表改为HASH索引的MEMORY表，不会影响查询的执行效率", "D": "只能使用整个关键字来搜索一行"}', 'ABD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '在Java中下面Class的声明哪些是错误的？', '{"A": "public abstract final class Test {\nabstract void method();\n}", "B": "public abstract class Test {\nabstract final void method();\n}", "C": "public abstract class Test {\nabstract void method() {\n}\n}", "D": "public class Test {\nfinal void method() {\n}\n}"}', 'ABC', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '在MySQL中，下列关于触发器的描述正确的是（）', '{"A": "MySQL的触发器只支持行级触发，不支持语句级触发", "B": "触发器可以调用将数据返回客户端的存储程序", "C": "在MySQL中，使用new和old引用触发器中发生的记录内容", "D": "在触发器中可以使用显式或者隐式方式开始或结束事务的语句"}', 'AC', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Java Application 源程序的主类是指包含有（ ）方法的类。', '{"A": "public static void main方法", "B": "toString方法", "C": "init方法", "D": "actionPerfromed方法"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '数据库系统相关人员是数据系统的重要组成部分，有三类人员：
_________
、应用程序开发人员和最终用户。', '{"A": "数据库管理员", "B": "程序员", "C": "高级程序员", "D": "软件开发商"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '数据模型应满足（）的要求。', '{"A": "真实模拟现实世界", "B": "容易为人们所理解", "C": "便于在计算机上实现", "D": "以上都是"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面语句正确的是（）', '{"A": "x+1=5", "B": "i++=1", "C": "a++b=1", "D": "x+=1"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '关系模型中，一个关键字是 （  ）。', '{"A": "可由多个任意属性组成", "B": "至多由一个属性组成", "C": "可由一个或多个其值能惟一标识该关系模式中任何元组的属性组成", "D": "以上都不是"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '泛型在Java中应用广泛，那么下列哪个选项不是泛型的作用（）', '{"A": "泛型会在编译时进行更强大的类型检查转换", "B": "泛型会消除强制类型转换", "C": "泛型能够提高代码的复用性", "D": "泛型不能够提高代码的复用性"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列关于视图说法错误的是？', '{"A": "视图是虚表，它在存储时只存储视图的定义，而没有存储对应的数据", "B": "创建视图用CREATE VIEW", "C": "修改视图用ALTER VIEW", "D": "删除视图用DELETE VIEW"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在高并发，事物等场景下，MYSQL5.6数据库默认使用哪种存储引擎？', '{"A": "Myisam", "B": "InnoDB", "C": "Memory", "D": "ndbCluster"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '以下java程序代码，执行后的结果是（）
<pre><code>1
2
3
4
5
6
7
8
9
10
public

class

Test {
    
public

static

void

main(String[] args) {   
        
Object o =
new

Object() {  
             
public

boolean

equals(Object obj) {  
                 
return

true
; 
         
}
     
};   
     
System.out.println(o.equals(
"Fred"
));
     
}
}</code></pre>', '{"A": "Fred", "B": "true", "C": "编译错误", "D": "运行时抛出异常"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在java7中，下列不能做switch()的参数类型是？', '{"A": "int型", "B": "枚举类型", "C": "字符串", "D": "浮点型"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面不属于Object类中方法的是:', '{"A": "hashCode()", "B": "finally()", "C": "wait()", "D": "toString()"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '数据库三级模式体系结构的划分，有利于保持数据库的 (  )。', '{"A": "数据独立性", "B": "数据安全性", "C": "结构规范化", "D": "操作可行性"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在DBS中，负责定义DB结构以及完整性定义、安全授权等工作的用户是（ ）', '{"A": "应用程序员", "B": "数据库设计人员", "C": "数据库管理员", "D": "终端用户"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '一个文件中的数据要在控制台上显示，首先需要（ ）。', '{"A": "System.out.print (buffer[i]);", "B": "FileOutputStream fout = new FileOutputStream(this.filename);", "C": "FileInputStream fin = new FileInputStream(this.filename);。", "D": "System.in.read(buffer)。"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在E-R图中，实体用（ ）符号表示。', '{"A": "椭圆", "B": "矩形", "C": "菱形", "D": "三角形"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '数据库的（）
是指数据的正确性和相容性。', '{"A": "安全性", "B": "完整性", "C": "并发控制", "D": "恢复"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Mysql中表student_table(id,name,birth,sex)，插入如下记录： (''1001'' , '''' , ''2000-01-01'' , ''男'');
(''1002'' , null , ''2000-12-21'' , ''男'');
(''1003'' , NULL , ''2000-05-20'' , ''男'');
(''1004'' , ''张三'' , ''2000-08-06'' , ''男'');
(''1005'' , ''李四'' , ''2001-12-01'' , ''女'');
查询2001年及之后出生的男生、女生总数，正确的SQL是（）？', '{"A": "select sex,count(*) from student_table group by sex where birth &gt;=''2001'' ;", "B": "select count(*) from student_table where birth &gt;=''2001'' group by sex ;", "C": "select sex,count(*) from student_table where birth &gt;=''2001'' group by sex ;", "D": "select sex,count(*) from student_table group by sex having birth &gt;=''2001'' ;"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '建立Statement对象的作用是？', '{"A": "连接数据库", "B": "声明数据库", "C": "执行SQL语句", "D": "保存查询结果"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '如下代码的输出结果是什么？

<pre><code>1
2
3
4
5
6
7
8
9
10
11
12
13
public

class

Test {
    
public

int

aMethod(){
        
static

int

i =
0
;
        
i++;
        
return

i;
    
}
public

static

void

main(String args[]){
    
Test test =
new

Test();
    
test.aMethod();
    
int

j = test.aMethod();
    
System.out.println(j);
    
}
}</code></pre>', '{"A": "0", "B": "1", "C": "2", "D": "编译失败"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '关于PreparedStatement与Statement描述错误的是（）', '{"A": "一般而言，PreparedStatement比Statement执行效率更高", "B": "PreparedStatement会预编译SQL语句", "C": "Statement每次都会解析/编译SQL，确立并优化数据获取路径", "D": "Statement执行扫描的结果集比PreparedStatement大"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面 Java 代码的运行结果为（）

<pre><code>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
public
 
class
 
Test {
    
private
 
int
 
x = 
10
;

class
 
Inner {
        
private
 
int
 
x = 
20
;

public
 
void
 
print() {
            
System.out.println(Test.
this
.x);
        
}
    
}

public
 
static
 
void
 
main(String[] args) {
        
Test outer = 
new
 
Test();
        
Test.Inner inner = outer.
new
 
Inner();
        
inner.print();
    
}
}</code></pre>', '{"A": "10", "B": "20", "C": "编译错误", "D": "运行错误"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '淘宝网上的信息处理系统属于（）', '{"A": "B/S 模型", "B": "C/S 模型", "C": "分布式模型", "D": "面向对象模型"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '使用什么命令进行查询，并不真正对硬盘上的文件系统进行查找，而是对文件名数据库进行检索，而且可以使用通配符？和*？', '{"A": "whereis", "B": "find", "C": "locate", "D": "type"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列关于视图与基本表的对比正确的是（）。', '{"A": "视图的定义功能强于基本表", "B": "视图的操作功能强于基本表", "C": "视图的数据控制功能弱于基本表", "D": "上面提到的三种功能二者均相当"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下图给定的关系R，它满足(   )。', '{"A": "1NF", "B": "2NF", "C": "3NF", "D": "BCNF"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在 Linux 中，下面文件及对应作用说法错误的是（）', '{"A": "/etc/group：包含系统中的用户组信息，如组名、组ID和组成员", "B": "/etc/passwd：包含用户的加密密码和其他安全相关的信息", "C": "/etc/sudoers：sudo配置文件，用于定义哪些用户可以以超级用户权限执行命令", "D": "/etc/hosts：用于映射主机名与IP地址的关系"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Linux中，执行下面代码将打印多少个 "-" （） <pre><code>1
2
3
4
5
6
7
8
int
 
main(
void
){
    
int
 
i;
    
for
(i=0;i&lt;4;i++){
        
fork();
        
printf
(
"-\n"
);
    
}
    
return
 
0;
}</code></pre>', '{"A": "16", "B": "30", "C": "32", "D": "15"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', 'Java创建对象的说法正确的有（）', '{"A": "用new语句创建对象，是最常见的创建对象的方法。", "B": "运用反射手段,调用java.lang.Class或者java.lang.reflect.Constructor类的newInstance()实例方法。", "C": "调用对象的clone()方法。", "D": "运用反序列化手段，调用java.io.ObjectInputStream对象的 readObject()方法。"}', 'ABCD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '下面哪些赋值语句是正确的（）', '{"A": "long test=012", "B": "float f=-412", "C": "int other =(int)true", "D": "double d=0x12345678", "E": "byte b=128"}', 'ABD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', 'mysql中查看SQL模式的命令是（）', '{"A": "select @@global.sql_mode", "B": "select global.sql_mode", "C": "select @@sql_mode", "D": "select @@session.sql_mode"}', 'ACD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列聚合函数中不忽略空值  (null) 的是（）', '{"A": "SUM (列名)", "B": "MAX (列名)", "C": "COUNT ( * )", "D": "AVG (列名)"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '从学生信息表（student）中提取姓名（name）列值为NULL的记录，下列选项正确的是（）', '{"A": "SELECT * FROM student WHERE name IS NOT NULL", "B": "SELECT name FROM student WHERE IS NULL", "C": "SELECT name FROM student WHERE it IS NULL", "D": "SELECT * FROM student WHERE name IS NULL"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '设关系R、S、W各有10个元组，那么这三个关系的笛卡尔积的元组个数是（）。', '{"A": "10", "B": "30", "C": "1000", "D": "不确定"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下列属于物理备份的优点的是？ I、操作简单 II、恢复简单 III、恢复时间快 IV、任何情况都可以跨平台和版本', '{"A": "I、II、III、IV", "B": "I、II、III", "C": "I、II、IV", "D": "II、III、IV"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在数据库设计中，将
E
－
R
图转换成关系数据模型的过程属于（
）。', '{"A": "需求分析阶段", "B": "物理设计阶段", "C": "逻辑设计阶段", "D": "概念设计阶段"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在 Linux 的 Shell 下，root 用户的提示符是（）', '{"A": "$", "B": "￥", "C": "#", "D": "%"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '以下SQL语句不可能返回null的是：（  ）', '{"A": "select min(col1) from t1", "B": "select max(col1) from t1", "C": "select count(col1) from t1", "D": "select concat(''max='', max(col1)) from t1"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'E-R
图是数据库设计的工具之一，它适用于建立数据库的( )？', '{"A": "需求模型", "B": "概念模型", "C": "逻辑模型", "D": "物理模型"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '以下程序运行的结果为（）

<pre><code>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
public

class

Example
extends

Thread{
     
@Override
     
public

void

run(){
       
try
{
             
Thread.sleep(
1000
);
             
}
catch

(InterruptedException e){
             
e.printStackTrace();
             
}
             
System.out.print(
"run"
);
     
}
     
public

static

void

main(String[] args){
             
Example example=
new

Example();
             
example.run();
             
System.out.print(
"main"
);
     
}
}</code></pre>', '{"A": "run main", "B": "main run", "C": "main", "D": "run"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '设有事务T1和T2，其并发操作顺序如下所示（其中 ①②③④⑤ 表示时间从前到后的顺序）
        T1                                                        T2
①READ （A）
②A ：=A*2
③ WRITE （A）
                                                            ④ READ （A）
⑤ ROLLBACK
该并发操作带来的问题是（ ）。', '{"A": "不一致分析", "B": "丢失更新", "C": "读了“脏数据”", "D": "写错误"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '如果一个list初始化为{5，3，1}，执行以下代码后，其结果为（）？ <pre><code>1
2
3
nums.add(
6
);
nums.add(
0
,
4
);
nums.remove(
1
);</code></pre>', '{"A": "[5, 3, 1, 6]", "B": "[4, 3, 1, 6]", "C": "[4, 3, 6]", "D": "[5, 3, 6]"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '对于Java中异常的描述正确的是（ ）', '{"A": "用throws定义了方法可能抛出的异常，那么调用此方法时一定会抛出此异常。", "B": "如果try块中没有抛出异常，finally块中的语句将不会被执行。", "C": "抛出异常意味着程序发生运行时错误，需要调试修改", "D": "Java中的非检测（unchecked）异常可能来自RuntimeException类或其子类。"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '在关系数据库设计中，关系模式是用来记录用户数据的（  ）。', '{"A": "二维表", "B": "视图", "C": "属性", "D": "实体"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面 Java 代码的运行结果为（）

<pre><code>1
2
3
4
5
6
7
8
public
 
static
 
void
 
main(String[] args) {
    
int
[] arr = {
2
, 
3
, 
4
, 
5
};
    
int
 
sum = 
0
;
    
for
 
(
int
 
i : arr) {
        
sum += i;
    
}
    
System.out.println(sum / arr.length);
}</code></pre>', '{"A": "3", "B": "3.5", "C": "4", "D": "4.5"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '列表(List)和集合(Set)下面说法正确的是？  (
)', '{"A": "Set中至多只能有一个空元素", "B": "List中至多只能有一个空元素", "C": "List和Set都可以包含重复元素的有序集合", "D": "List和Set都是有序集合"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '当关系 S 自然联接时，能够把 S 原该舍弃的元组放到结果关系中的操作是 (    )', '{"A": "左外连接", "B": "右外连接", "C": "外部并", "D": "外连接"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '已知两个关系如下：

<table>
<tbody>
<tr>
<td>
R

</td><td>
A

</td><td>
B

</td><td>
C

</td></tr>
<tr>
<td>

</td><td>
1

</td><td>
b1

</td><td>
c1

</td></tr>
<tr>
<td>

</td><td>
2

</td><td>
b2

</td><td>
c2

</td></tr>
<tr>
<td>

</td><td>
3

</td><td>
b1

</td><td>
c1

</td></tr>
</tbody>
</table>

<table>
<tbody>
<tr>
<td>
S

</td><td>
D

</td><td>
E

</td><td>
A

</td></tr>
<tr>
<td>

</td><td>
d1

</td><td>
e1

</td><td>
1

</td></tr>
<tr>
<td>

</td><td>
d2

</td><td>
e2

</td><td>
1

</td></tr>
<tr>
<td>

</td><td>
d3

</td><td>
e1

</td><td>
2

</td></tr>
</tbody>
</table>

假设
R
的主键是
A
，
S
的主键是
D
，在关系
S
的定义中包含外键子句：

“
FOREIGN KEY (A) REFERENCES R(A) ON DELETE NO ACTION
”，

下列
SQL
语句不能成功执行的是
（
）。', '{"A": "DELETE　FROM　R　WHERE　A＝2", "B": "DELETE　FROM　R　WHERE　A＝3", "C": "DELETE　FROM　S　WHERE　A＝1", "D": "DELETE　FROM　S　WHERE　A＝2"}', 'A', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '已知某期刊信息库中有作家信息表author（作者编号aid，作者姓名aname，作者笔名ausername，作者邮箱aemail，备注remarks），稿件表manuscript（稿件编号mid，标题mtitle，作者编号aid，交稿时间mtime）现需要设置外键作者编号，下列语句正确的是（）', '{"A": "ALTER TABLE manuscript\nADD CONSTRAINT FK_aid\nFOREIGN KEY (aid) REFERENCES author (aid)", "B": "ALTER TABLE manuscript\nADD CONSTRAINT FK_aid\nFOREIGN KEY (manuscript.aid) REFERENCES author (aid)", "C": "ALTER TABLE manuscript\nADD FOREIGN KEY (manuscript.aid)\nREFERENCES author (aid)", "D": "ALTER TABLE manuscript\nADD FOREIGN KEY (aid)\nREFERENCES author (aid)"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '有一张学生成绩表sc（sno 学号，class 课程，score 成绩），示例如下：
请问哪个语句可以查询出每个学生的英语、数学的成绩（行转列，一个学生输出一行记录，比如输出[1, 89, 90]）？', '{"A": "select sno,class,score from sc where class in(''english'',''math'')", "B": "select sno,\nif(class=''english'',score,0),\nif(class=''math'',score,0)\nfrom sc\nwhere class in(''english'',''math'')", "C": "select sno,\ncase when class=''english'' then score else 0 end ,\ncase when class=''math'' then score else 0 end\nfrom sc\nwhere class in(''english'',''math'')", "D": "select sno,\nsum(if(class=''english'',score,0)) as english,\nsum( if(class=''math'',score,0) ) as math\nfrom sc\nwhere class in(''english'',''math'')\ngroup by sno"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '给出数据表score(stu_id,name,math,english,chinese)，下列语句正确的是（）', '{"A": "select *,sum(english) from score", "B": "delete * from score", "C": "select stu_id,sum(math) from score", "D": "select sum(math),avg(chinese) from score"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '关于MySQL常见索引的描述正确是（）', '{"A": "创建UNIQUE索引，索引列的值必须唯一，不允许有空值", "B": "一个表中可以创建多个全文索引", "C": "为提高效率可建立组合索引，遵循“最左前缀”原则", "D": "使用非聚集索引需要将物理数据页中的数据按列重新排序"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '下面有关maven和ant的描述，描述错误的是？', '{"A": "Ant 没有正式的约定如一个一般项目的目录结构，你必须明确的告诉 Ant 哪里去找源代码", "B": "Maven 拥有约定，因为你遵循了约定，它已经知道你的源代码在哪里", "C": "maven和ant都有“生命周期”的概念，当你输入一个命令后，maven或者ant会执行一系列的有序的步骤，直到到达你指定的生命周期", "D": "Ant构建文件默认命名为build.xml，Maven默认构建文件为pom.xml"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'Linux 用户磁盘配额配置文件 aquota.user 的默认访问权限是（）', '{"A": "755", "B": "644", "C": "700", "D": "600"}', 'D', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', '使用什么命令进行查询，并不真正对硬盘上的文件系统进行查找，而是对文件名数据库进行检索，而且可以使用通配符？和*？', '{"A": "whereis", "B": "find", "C": "locate", "D": "type"}', 'C', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('single_choice', 'ServletConfig接口默认是哪里实现的？', '{"A": "Servlet", "B": "GenericServlet", "C": "HttpServlet", "D": "用户自定义servlet"}', 'B', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '下列关于修饰符混用的说法，错误的包括（ ）', '{"A": "abstract不能与final并列修饰同一个类", "B": "abstract类中可以有private的成员", "C": "abstract方法必须在abstract类中0", "D": "static方法中能处理非static的成员变量"}', 'CD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '下面有关java类加载器，说法正确的是？', '{"A": "引导类加载器（bootstrap class loader）：它用来加载 Java 的核心库，是用原生代码来实现的", "B": "扩展类加载器（extensions class loader）：它用来加载 Java 的扩展库。", "C": "系统类加载器（system class loader）：它根据 Java 应用的类路径（CLASSPATH）来加载 Java 类", "D": "tomcat为每个App创建一个Loader，里面保存着此WebApp的ClassLoader。需要加载WebApp下的类时，就取出ClassLoader来使用"}', 'ABCD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '下面关于 Java 中相关流的说法错误的是（）', '{"A": "从 BufferedReader 对象读取一个字符或字符串可以使用 read() 方法", "B": "FileInputStream 用于从文件读取数据，它的对象可以用关键字 new 来创建", "C": "File 类中可以用 mkdir() 或是 mkdirs() 方法来创建文件夹", "D": "控制台的输出由 print( ) 和 println() 完成，这些方法都由类 PrintWriter 定义，System.out 是该类对象的一个引用"}', 'AD', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '在Linux系统中，以下哪个命令用于查看当前系统的负载情况？（）', '{"A": "top", "B": "uptime", "C": "ps", "D": "netstat"}', 'AB', '科技', '基础编程');
INSERT INTO questions (type, question, options, answer, category_big, category_small) VALUES ('multiple_choice', '在Linux上，对于多进程，子进程继承了父进程的下列哪些？', '{"A": "进程地址空间", "B": "共享内存", "C": "信号掩码", "D": "已打开的文件描述符", "E": "以上都不是"}', 'BCD', '科技', '基础编程');
